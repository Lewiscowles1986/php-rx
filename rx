#!/usr/bin/env php
<?php declare(strict_types=1);

include_once("vendor/autoload.php");

if (! isset($argv[1]) || ! isset($argv[2]) || ! file_exists($argv[1]) || ! file_exists($argv[2])) {
    echo "  ❌  Unable to find file(s) in argument(s).\n";
    echo "      Usage: ./rx <yaml/json> <schema> [\"<glob of custom types>\"]\n";
    exit(1);
}
try {
    $credentialsFile = Rx\RxLoader::load($argv[1]);
} catch (Exception $e) {
    echo "  ❌  Unable to parse yaml/json file.\n";
    echo "      {$e->getMessage()}\n";
    exit(1);
}
try {
    $schemaFile = Rx\RxLoader::load($argv[2]);
} catch (Exception $e) {
    echo "  ❌  Unable to parse schema file.\n";
    echo "      {$e->getMessage()}\n";
    exit(1);
}

$rx = new Rx\Rx();

// Add custom types
if (isset($argv[3])) {
    foreach (glob($argv[3]) as $type) {
        try {
            $typeFile = Rx\RxLoader::load($type);
            $rx->learnType($typeFile->uri, $typeFile->schema);
            echo "  ✅  Added {$typeFile->uri}.\n";
        } catch (Exception $e) {
            echo "  ❌  Unable to add custom types via glob.\n";
            echo "      {$e->getMessage()}\n";
            exit(1);
        }
    }
}

try {
    $schema = $rx->makeSchema($schemaFile);
    echo "  ✅  Schema loaded successfully.\n";
} catch (Exception $e) {
    echo "  ❌  An error occurred loading the schema.\n";
    echo "      {$e->getMessage()}\n";
    exit(1);
}

try {
    $schema->check($credentialsFile);
    echo "  ✅  File is correct according to the schema.\n";
} catch (Exception $e) {
    echo "  ❌  An error occurred validating the file against the schema.\n";
    echo "      {$e->getMessage()}\n";
    exit(1);
}

exit(0);